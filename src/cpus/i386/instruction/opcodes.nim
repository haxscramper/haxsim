type
  ICode* = enum

    opADD_Rm8_R8                     = (0x00_00_00, "ADD r/m8 r8")
    opADD_Rm16_32_R16_32             = (0x01_00_00, "ADD r/m16/32 r16/32")
    opADD_R8_Rm8                     = (0x02_00_00, "ADD r8 r/m8")
    opADD_R16_32_Rm16_32             = (0x03_00_00, "ADD r16/32 r/m16/32")
    opADD_Al_Imm8                    = (0x04_00_00, "ADD AL imm8")
    opADD_Eax_I16_32                 = (0x05_00_00, "ADD EAX imm16/32")
    opPUSH_Es                        = (0x06_00_00, "PUSH ES")
    opPOP_Es                         = (0x07_00_00, "POP ES")
    opOR_Rm8_R8                      = (0x08_00_00, "OR r/m8 r8")
    opOR_Rm16_32_R16_32              = (0x09_00_00, "OR r/m16/32 r16/32")
    opOR_R8_Rm8                      = (0x0A_00_00, "OR r8 r/m8")
    opOR_R16_32_Rm16_32              = (0x0B_00_00, "OR r16/32 r/m16/32")
    opOR_Al_Imm8                     = (0x0C_00_00, "OR AL imm8")
    opOR_Eax_I16_32                  = (0x0D_00_00, "OR eAX imm16/32")
    opPUSH_Cs                        = (0x0E_00_00, "PUSH CS")
    opSLDT_M16_Ldtr                  = (0x0F_00_00, "SLDT m16 LDTR")
    opSTR_M16_Tr                     = (0x0F_00_01, "STR m16 TR")
    opLLDT_Ldtr_Rm16                 = (0x0F_00_02, "LLDT LDTR r/m16")
    opLTR_Tr_Rm16                    = (0x0F_00_03, "LTR TR r/m16")
    opVERR_Rm16                      = (0x0F_00_04, "VERR r/m16")
    opVERW_Rm16                      = (0x0F_00_05, "VERW r/m16")
    opSGDT_M_Gdtr                    = (0x0F_00_10, "SGDT m GDTR")
    opSIDT_M_Idtr                    = (0x0F_00_11, "SIDT m IDTR")
    opLGDT_Gdtr_M                    = (0x0F_00_12, "LGDT GDTR m")
    opLIDT_Idtr_M                    = (0x0F_00_13, "LIDT IDTR m")
    opSMSW_M16_Msw                   = (0x0F_00_14, "SMSW m16 MSW")
    opLMSW_Msw_Rm16                  = (0x0F_00_16, "LMSW MSW r/m16")
    opINVLPG_M                       = (0x0F_00_17, "INVLPG m")
    opLAR_R16_32_M16                 = (0x0F_00_20, "LAR r16/32 m16")
    opLSL_R16_32_M16                 = (0x0F_00_30, "LSL r16/32 m16")
    opCLTS_Cr0                       = (0x0F_00_60, "CLTS CR0")
    opUD2                            = (0x0F_00_B0, "UD2")
    opMOV_R32_Crn                    = (0x0F_02_00, "MOV r32 CRn")
    opMOV_R32_Drn                    = (0x0F_02_10, "MOV r32 DRn")
    opMOV_Crn_R32                    = (0x0F_02_20, "MOV CRn r32")
    opMOV_Drn_R32                    = (0x0F_02_30, "MOV DRn r32")
    opJO_Rel16_32                    = (0x0F_08_00, "JO rel16/32")
    opJNO_Rel16_32                   = (0x0F_08_10, "JNO rel16/32")
    opJB_Rel16_32                    = (0x0F_08_20, "JB rel16/32")
    opJNB_Rel16_32                   = (0x0F_08_30, "JNB rel16/32")
    opJZ_Rel16_32                    = (0x0F_08_40, "JZ rel16/32")
    opJNZ_Rel16_32                   = (0x0F_08_50, "JNZ rel16/32")
    opJBE_Rel16_32                   = (0x0F_08_60, "JBE rel16/32")
    opJNBE_Rel16_32                  = (0x0F_08_70, "JNBE rel16/32")
    opJS_Rel16_32                    = (0x0F_08_80, "JS rel16/32")
    opJNS_Rel16_32                   = (0x0F_08_90, "JNS rel16/32")
    opJP_Rel16_32                    = (0x0F_08_A0, "JP rel16/32")
    opJNP_Rel16_32                   = (0x0F_08_B0, "JNP rel16/32")
    opJL_Rel16_32                    = (0x0F_08_C0, "JL rel16/32")
    opJNL_Rel16_32                   = (0x0F_08_D0, "JNL rel16/32")
    opJLE_Rel16_32                   = (0x0F_08_E0, "JLE rel16/32")
    opJNLE_Rel16_32                  = (0x0F_08_F0, "JNLE rel16/32")
    opSETO_Rm8                       = (0x0F_09_00, "SETO r/m8")
    opSETNO_Rm8                      = (0x0F_09_10, "SETNO r/m8")
    opSETB_Rm8                       = (0x0F_09_20, "SETB r/m8")
    opSETNB_Rm8                      = (0x0F_09_30, "SETNB r/m8")
    opSETZ_Rm8                       = (0x0F_09_40, "SETZ r/m8")
    opSETNZ_Rm8                      = (0x0F_09_50, "SETNZ r/m8")
    opSETBE_Rm8                      = (0x0F_09_60, "SETBE r/m8")
    opSETNBE_Rm8                     = (0x0F_09_70, "SETNBE r/m8")
    opSETS_Rm8                       = (0x0F_09_80, "SETS r/m8")
    opSETNS_Rm8                      = (0x0F_09_90, "SETNS r/m8")
    opSETP_Rm8                       = (0x0F_09_A0, "SETP r/m8")
    opSETNP_Rm8                      = (0x0F_09_B0, "SETNP r/m8")
    opSETL_Rm8                       = (0x0F_09_C0, "SETL r/m8")
    opSETNL_Rm8                      = (0x0F_09_D0, "SETNL r/m8")
    opSETLE_Rm8                      = (0x0F_09_E0, "SETLE r/m8")
    opSETNLE_Rm8                     = (0x0F_09_F0, "SETNLE r/m8")
    opPUSH_Fs                        = (0x0F_0A_00, "PUSH FS")
    opPOP_Fs                         = (0x0F_0A_10, "POP FS")
    opBT_Rm16_32_R16_32              = (0x0F_0A_30, "BT r/m16/32 r16/32")
    opSHLD_Rm16_32_R16_32_Imm8       = (0x0F_0A_40, "SHLD r/m16/32 r16/32 imm8")
    opSHLD_Rm16_32_R16_32_Cl         = (0x0F_0A_50, "SHLD r/m16/32 r16/32 CL")
    opPUSH_Gs                        = (0x0F_0A_80, "PUSH GS")
    opPOP_Gs                         = (0x0F_0A_90, "POP GS")
    opBTS_Rm16_32_R16_32             = (0x0F_0A_B0, "BTS r/m16/32 r16/32")
    opSHRD_Rm16_32_R16_32_Imm8       = (0x0F_0A_C0, "SHRD r/m16/32 r16/32 imm8")
    opSHRD_Rm16_32_R16_32_Cl         = (0x0F_0A_D0, "SHRD r/m16/32 r16/32 CL")
    opIMUL_R16_32_Rm16_32            = (0x0F_0A_F0, "IMUL r16/32 r/m16/32")
    opLSS_Ss_R16_32_M32_48           = (0x0F_0B_20, "LSS SS r16/32 m16:16/32")
    opBTR_Rm16_32_R16_32             = (0x0F_0B_30, "BTR r/m16/32 r16/32")
    opLFS_Fs_R16_32_M32_48           = (0x0F_0B_40, "LFS FS r16/32 m16:16/32")
    opLGS_Gs_R16_32_M32_48           = (0x0F_0B_50, "LGS GS r16/32 m16:16/32")
    opMOVZX_R16_32_Rm8               = (0x0F_0B_60, "MOVZX r16/32 r/m8")
    opMOVZX_R16_32_Rm16              = (0x0F_0B_70, "MOVZX r16/32 r/m16")
    opBT_Rm16_32_Imm8                = (0x0F_0B_A4, "BT r/m16/32 imm8")
    opBTS_Rm16_32_Imm8               = (0x0F_0B_A5, "BTS r/m16/32 imm8")
    opBTR_Rm16_32_Imm8               = (0x0F_0B_A6, "BTR r/m16/32 imm8")
    opBTC_Rm16_32_Imm8               = (0x0F_0B_A7, "BTC r/m16/32 imm8")
    opBTC_Rm16_32_R16_32             = (0x0F_0B_B0, "BTC r/m16/32 r16/32")
    opBSF_R16_32_Rm16_32             = (0x0F_0B_C0, "BSF r16/32 r/m16/32")
    opBSR_R16_32_Rm16_32             = (0x0F_0B_D0, "BSR r16/32 r/m16/32")
    opMOVSX_R16_32_Rm8               = (0x0F_0B_E0, "MOVSX r16/32 r/m8")
    opMOVSX_R16_32_Rm16              = (0x0F_0B_F0, "MOVSX r16/32 r/m16")
    opADC_Rm8_R8                     = (0x10_00_00, "ADC r/m8 r8")
    opADC_Rm16_32_R16_32             = (0x11_00_00, "ADC r/m16/32 r16/32")
    opADC_R8_Rm8                     = (0x12_00_00, "ADC r8 r/m8")
    opADC_R16_32_Rm16_32             = (0x13_00_00, "ADC r16/32 r/m16/32")
    opADC_Al_Imm8                    = (0x14_00_00, "ADC AL imm8")
    opADC_Eax_I16_32                 = (0x15_00_00, "ADC eAX imm16/32")
    opPUSH_Ss                        = (0x16_00_00, "PUSH SS")
    opPOP_Ss                         = (0x17_00_00, "POP SS")
    opSBB_Rm8_R8                     = (0x18_00_00, "SBB r/m8 r8")
    opSBB_Rm16_32_R16_32             = (0x19_00_00, "SBB r/m16/32 r16/32")
    opSBB_R8_Rm8                     = (0x1A_00_00, "SBB r8 r/m8")
    opSBB_R16_32_Rm16_32             = (0x1B_00_00, "SBB r16/32 r/m16/32")
    opSBB_Al_Imm8                    = (0x1C_00_00, "SBB AL imm8")
    opSBB_Eax_I16_32                 = (0x1D_00_00, "SBB eAX imm16/32")
    opPUSH_Ds                        = (0x1E_00_00, "PUSH DS")
    opPOP_Ds                         = (0x1F_00_00, "POP DS")
    opAND_Rm8_R8                     = (0x20_00_00, "AND r/m8 r8")
    opAND_Rm16_32_R16_32             = (0x21_00_00, "AND r/m16/32 r16/32")
    opAND_R8_Rm8                     = (0x22_00_00, "AND r8 r/m8")
    opAND_R16_32_Rm16_32             = (0x23_00_00, "AND r16/32 r/m16/32")
    opAND_Al_Imm8                    = (0x24_00_00, "AND AL imm8")
    opAND_Eax_I16_32                 = (0x25_00_00, "AND eAX imm16/32")
    opES_Es                          = (0x26_00_00, "ES ES")
    opDAA_Al                         = (0x27_00_00, "DAA AL")
    opSUB_Rm8_R8                     = (0x28_00_00, "SUB r/m8 r8")
    opSUB_Rm16_32_R16_32             = (0x29_00_00, "SUB r/m16/32 r16/32")
    opSUB_R8_Rm8                     = (0x2A_00_00, "SUB r8 r/m8")
    opSUB_R16_32_Rm16_32             = (0x2B_00_00, "SUB r16/32 r/m16/32")
    opSUB_Al_Imm8                    = (0x2C_00_00, "SUB AL imm8")
    opSUB_Eax_I16_32                 = (0x2D_00_00, "SUB eAX imm16/32")
    opCS_Cs                          = (0x2E_00_00, "CS CS")
    opDAS_Al                         = (0x2F_00_00, "DAS AL")
    opXOR_Rm8_R8                     = (0x30_00_00, "XOR r/m8 r8")
    opXOR_Rm16_32_R16_32             = (0x31_00_00, "XOR r/m16/32 r16/32")
    opXOR_R8_Rm8                     = (0x32_00_00, "XOR r8 r/m8")
    opXOR_R16_32_Rm16_32             = (0x33_00_00, "XOR r16/32 r/m16/32")
    opXOR_Al_Imm8                    = (0x34_00_00, "XOR AL imm8")
    opXOR_Eax_I16_32                 = (0x35_00_00, "XOR eAX imm16/32")
    opSS_Ss                          = (0x36_00_00, "SS SS")
    opAAA_Al_Ah                      = (0x37_00_00, "AAA AL AH")
    opCMP_Rm8_R8                     = (0x38_00_00, "CMP r/m8 r8")
    opCMP_Rm16_32_R16_32             = (0x39_00_00, "CMP r/m16/32 r16/32")
    opCMP_R8_Rm8                     = (0x3A_00_00, "CMP r8 r/m8")
    opCMP_R16_32_Rm16_32             = (0x3B_00_00, "CMP r16/32 r/m16/32")
    opCMP_Al_Imm8                    = (0x3C_00_00, "CMP AL imm8")
    opCMP_Eax_I16_32                 = (0x3D_00_00, "CMP eAX imm16/32")
    opDS_Ds                          = (0x3E_00_00, "DS DS")
    opAAS_Al_Ah                      = (0x3F_00_00, "AAS AL AH")
    opINC_R16_32                     = (0x40_00_00, "INC r16/32")
    opDEC_R16_32                     = (0x48_00_00, "DEC r16/32")
    opPUSH_R16_32                    = (0x50_00_00, "PUSH r16/32")
    opPOP_R16_32                     = (0x58_00_00, "POP r16/32")
    opPUSHA_Ax_Cx_Dx_Stack           = (0x60_00_00, "PUSHA AX CX DX ...")
    opPOPA_Di_Si_Bp_Stack            = (0x61_00_00, "POPA DI SI BP ...")
    opBOUND_R16_32_M16and16_32and32_Eflags = (0x62_00_00, "BOUND r16/32 m16/32&16/32 eFlags")
    opARPL_Rm16_R16                  = (0x63_00_00, "ARPL r/m16 r16")
    opFS_Fs                          = (0x64_00_00, "FS FS")
    opGS_Gs                          = (0x65_00_00, "GS GS")
    opPUSH_I16_32                    = (0x68_00_00, "PUSH imm16/32")
    opIMUL_R16_32_Rm16_32_I16_32     = (0x69_00_00, "IMUL r16/32 r/m16/32 imm16/32")
    opPUSH_Imm8                      = (0x6A_00_00, "PUSH imm8")
    opIMUL_R16_32_Rm16_32_Imm8       = (0x6B_00_00, "IMUL r16/32 r/m16/32 imm8")
    opINS_M8_Dx                      = (0x6C_00_00, "INS m8 DX")
    opINS_M16_32_Dx                  = (0x6D_00_00, "INS m16/32 DX")
    opOUTS_Dx_M8                     = (0x6E_00_00, "OUTS DX m8")
    opOUTS_Dx_M16_32                 = (0x6F_00_00, "OUTS DX m16/32")
    opJO_Rel8                        = (0x70_00_00, "JO rel8")
    opJNO_Rel8                       = (0x71_00_00, "JNO rel8")
    opJC_Rel8                        = (0x72_00_00, "JC rel8")
    opJNC_Rel8                       = (0x73_00_00, "JNC rel8")
    opJZ_Rel8                        = (0x74_00_00, "JZ rel8")
    opJNZ_Rel8                       = (0x75_00_00, "JNZ rel8")
    opJBE_Rel8                       = (0x76_00_00, "JBE rel8")
    opJNBE_Rel8                      = (0x77_00_00, "JNBE rel8")
    opJS_Rel8                        = (0x78_00_00, "JS rel8")
    opJNS_Rel8                       = (0x79_00_00, "JNS rel8")
    opJP_Rel8                        = (0x7A_00_00, "JP rel8")
    opJNP_Rel8                       = (0x7B_00_00, "JNP rel8")
    opJL_Rel8                        = (0x7C_00_00, "JL rel8")
    opJNL_Rel8                       = (0x7D_00_00, "JNL rel8")
    opJLE_Rel8                       = (0x7E_00_00, "JLE rel8")
    opJG_Rel8                        = (0x7F_00_00, "JG rel8")
    opADD_Rm8_Imm8                   = (0x80_00_00, "ADD r/m8 imm8")
    opOR_Rm8_Imm8                    = (0x80_00_01, "OR r/m8 imm8")
    opADC_Rm8_Imm8                   = (0x80_00_02, "ADC r/m8 imm8")
    opSBB_Rm8_Imm8                   = (0x80_00_03, "SBB r/m8 imm8")
    opAND_Rm8_Imm8                   = (0x80_00_04, "AND r/m8 imm8")
    opSUB_Rm8_Imm8                   = (0x80_00_05, "SUB r/m8 imm8")
    opXOR_Rm8_Imm8                   = (0x80_00_06, "XOR r/m8 imm8")
    opCMP_Rm8_Imm8                   = (0x80_00_07, "CMP r/m8 imm8")
    opADD_Rm16_32_I16_32             = (0x81_00_00, "ADD r/m16/32 imm16/32")
    opOR_Rm16_32_I16_32              = (0x81_00_01, "OR r/m16/32 imm16/32")
    opADC_Rm16_32_I16_32             = (0x81_00_02, "ADC r/m16/32 imm16/32")
    opSBB_Rm16_32_I16_32             = (0x81_00_03, "SBB r/m16/32 imm16/32")
    opAND_Rm16_32_I16_32             = (0x81_00_04, "AND r/m16/32 imm16/32")
    opSUB_Rm16_32_I16_32             = (0x81_00_05, "SUB r/m16/32 imm16/32")
    opXOR_Rm16_32_I16_32             = (0x81_00_06, "XOR r/m16/32 imm16/32")
    opCMP_Rm16_32_I16_32             = (0x81_00_07, "CMP r/m16/32 imm16/32")
    opTEST_Rm8_R8                    = (0x84_00_00, "TEST r/m8 r8")
    opTEST_Rm16_32_R16_32            = (0x85_00_00, "TEST r/m16/32 r16/32")
    opXCHG_R8_Rm8                    = (0x86_00_00, "XCHG r8 r/m8")
    opXCHG_R16_32_Rm16_32            = (0x87_00_00, "XCHG r16/32 r/m16/32")
    opMOV_Rm8_R8                     = (0x88_00_00, "MOV r/m8 r8")
    opMOV_Rm16_32_R16_32             = (0x89_00_00, "MOV r/m16/32 r16/32")
    opMOV_R8_Rm8                     = (0x8A_00_00, "MOV r8 r/m8")
    opMOV_R16_32_Rm16_32             = (0x8B_00_00, "MOV r16/32 r/m16/32")
    opMOV_M16_Sreg                   = (0x8C_00_00, "MOV m16 Sreg")
    opLEA_R16_32_M                   = (0x8D_00_00, "LEA r16/32 m")
    opMOV_Sreg_Rm16                  = (0x8E_00_00, "MOV Sreg r/m16")
    opPOP_Rm16_32                    = (0x8F_00_00, "POP r/m16/32")
    opXCHG_R16_32_Eax                = (0x90_00_00, "XCHG r16/32 eAX")
    opCWDE_Eax_Ax                    = (0x98_00_00, "CWDE EAX AX")
    opCDQ_Edx_Eax                    = (0x99_00_00, "CDQ EDX EAX")
    opCALLF_Ptr16_32                 = (0x9A_00_00, "CALLF ptr16:16/32")
    opPUSHFD_Eflags                  = (0x9C_00_00, "PUSHFD EFlags")
    opPOPFD_Eflags                   = (0x9D_00_00, "POPFD EFlags")
    opSAHF_Ah                        = (0x9E_00_00, "SAHF AH")
    opLAHF_Ah                        = (0x9F_00_00, "LAHF AH")
    opMOV_Al_Moffs8                  = (0xA0_00_00, "MOV AL moffs8")
    opMOV_Eax_Moffs16_32             = (0xA1_00_00, "MOV eAX moffs16/32")
    opMOV_Moffs8_Al                  = (0xA2_00_00, "MOV moffs8 AL")
    opMOV_Moffs16_32_Eax             = (0xA3_00_00, "MOV moffs16/32 eAX")
    opMOVS_M8_M8                     = (0xA4_00_00, "MOVS m8 m8")
    opMOVS_M16_32_M16_32             = (0xA5_00_00, "MOVS m16/32 m16/32")
    opCMPS_M8_M8                     = (0xA6_00_00, "CMPS m8 m8")
    opCMPS_M16_32_M16_32             = (0xA7_00_00, "CMPS m16/32 m16/32")
    opTEST_Al_Imm8                   = (0xA8_00_00, "TEST AL imm8")
    opTEST_Eax_I16_32                = (0xA9_00_00, "TEST eAX imm16/32")
    opSTOS_M8_Al                     = (0xAA_00_00, "STOS m8 AL")
    opSTOS_M16_32_Eax                = (0xAB_00_00, "STOS m16/32 eAX")
    opLODS_Al_M8                     = (0xAC_00_00, "LODS AL m8")
    opLODS_Eax_M16_32                = (0xAD_00_00, "LODS eAX m16/32")
    opSCAS_M8_Al                     = (0xAE_00_00, "SCAS m8 AL")
    opSCAS_M16_32_Eax                = (0xAF_00_00, "SCAS m16/32 eAX")
    opMOV_R8_Imm8                    = (0xB0_00_00, "MOV r8 imm8")
    opMOV_R16_32_I16_32              = (0xB8_00_00, "MOV r16/32 imm16/32")
    opROL_Rm8_Imm8                   = (0xC0_00_00, "ROL r/m8 imm8")
    opROR_Rm8_Imm8                   = (0xC0_00_01, "ROR r/m8 imm8")
    opRCL_Rm8_Imm8                   = (0xC0_00_02, "RCL r/m8 imm8")
    opRCR_Rm8_Imm8                   = (0xC0_00_03, "RCR r/m8 imm8")
    opSHL_Rm8_Imm8                   = (0xC0_00_04, "SHL r/m8 imm8")
    opSHR_Rm8_Imm8                   = (0xC0_00_05, "SHR r/m8 imm8")
    opSAL_Rm8_Imm8                   = (0xC0_00_06, "SAL r/m8 imm8")
    opSAR_Rm8_Imm8                   = (0xC0_00_07, "SAR r/m8 imm8")
    opROL_Rm16_32_Imm8               = (0xC1_00_00, "ROL r/m16/32 imm8")
    opROR_Rm16_32_Imm8               = (0xC1_00_01, "ROR r/m16/32 imm8")
    opRCL_Rm16_32_Imm8               = (0xC1_00_02, "RCL r/m16/32 imm8")
    opRCR_Rm16_32_Imm8               = (0xC1_00_03, "RCR r/m16/32 imm8")
    opSHL_Rm16_32_Imm8               = (0xC1_00_04, "SHL r/m16/32 imm8")
    opSHR_Rm16_32_Imm8               = (0xC1_00_05, "SHR r/m16/32 imm8")
    opSAL_Rm16_32_Imm8               = (0xC1_00_06, "SAL r/m16/32 imm8")
    opSAR_Rm16_32_Imm8               = (0xC1_00_07, "SAR r/m16/32 imm8")
    opRETN_Imm16                     = (0xC2_00_00, "RETN imm16")
    opRETN                           = (0xC3_00_00, "RETN")
    opLES_Es_R16_32_M32_48           = (0xC4_00_00, "LES ES r16/32 m16:16/32")
    opLDS_Ds_R16_32_M32_48           = (0xC5_00_00, "LDS DS r16/32 m16:16/32")
    opMOV_Rm8_Imm8                   = (0xC6_00_00, "MOV r/m8 imm8")
    opMOV_Rm16_32_I16_32             = (0xC7_00_00, "MOV r/m16/32 imm16/32")
    opENTER_Ebp_Imm16_Imm8           = (0xC8_00_00, "ENTER eBP imm16 imm8")
    opLEAVE_Ebp                      = (0xC9_00_00, "LEAVE eBP")
    opRETF_Imm16                     = (0xCA_00_00, "RETF imm16")
    opRETF                           = (0xCB_00_00, "RETF")
    opINT_3_Eflags                   = (0xCC_00_00, "INT 3 eFlags")
    opINT_Imm8_Eflags                = (0xCD_00_00, "INT imm8 eFlags")
    opINTO_Eflags                    = (0xCE_00_00, "INTO eFlags")
    opIRET_Eflags                    = (0xCF_00_00, "IRET eFlags")
    opROL_Rm8_1                      = (0xD0_00_00, "ROL r/m8 1")
    opROR_Rm8_1                      = (0xD0_00_01, "ROR r/m8 1")
    opRCL_Rm8_1                      = (0xD0_00_02, "RCL r/m8 1")
    opRCR_Rm8_1                      = (0xD0_00_03, "RCR r/m8 1")
    opSHL_Rm8_1                      = (0xD0_00_04, "SHL r/m8 1")
    opSHR_Rm8_1                      = (0xD0_00_05, "SHR r/m8 1")
    opSAL_Rm8_1                      = (0xD0_00_06, "SAL r/m8 1")
    opSAR_Rm8_1                      = (0xD0_00_07, "SAR r/m8 1")
    opROL_Rm16_32_1                  = (0xD1_00_00, "ROL r/m16/32 1")
    opROR_Rm16_32_1                  = (0xD1_00_01, "ROR r/m16/32 1")
    opRCL_Rm16_32_1                  = (0xD1_00_02, "RCL r/m16/32 1")
    opRCR_Rm16_32_1                  = (0xD1_00_03, "RCR r/m16/32 1")
    opSHL_Rm16_32_1                  = (0xD1_00_04, "SHL r/m16/32 1")
    opSHR_Rm16_32_1                  = (0xD1_00_05, "SHR r/m16/32 1")
    opSAL_Rm16_32_1                  = (0xD1_00_06, "SAL r/m16/32 1")
    opSAR_Rm16_32_1                  = (0xD1_00_07, "SAR r/m16/32 1")
    opROL_Rm8_Cl                     = (0xD2_00_00, "ROL r/m8 CL")
    opROR_Rm8_Cl                     = (0xD2_00_01, "ROR r/m8 CL")
    opRCL_Rm8_Cl                     = (0xD2_00_02, "RCL r/m8 CL")
    opRCR_Rm8_Cl                     = (0xD2_00_03, "RCR r/m8 CL")
    opSHL_Rm8_Cl                     = (0xD2_00_04, "SHL r/m8 CL")
    opSHR_Rm8_Cl                     = (0xD2_00_05, "SHR r/m8 CL")
    opSAL_Rm8_Cl                     = (0xD2_00_06, "SAL r/m8 CL")
    opSAR_Rm8_Cl                     = (0xD2_00_07, "SAR r/m8 CL")
    opROL_Rm16_32_Cl                 = (0xD3_00_00, "ROL r/m16/32 CL")
    opROR_Rm16_32_Cl                 = (0xD3_00_01, "ROR r/m16/32 CL")
    opRCL_Rm16_32_Cl                 = (0xD3_00_02, "RCL r/m16/32 CL")
    opRCR_Rm16_32_Cl                 = (0xD3_00_03, "RCR r/m16/32 CL")
    opSHL_Rm16_32_Cl                 = (0xD3_00_04, "SHL r/m16/32 CL")
    opSHR_Rm16_32_Cl                 = (0xD3_00_05, "SHR r/m16/32 CL")
    opSAL_Rm16_32_Cl                 = (0xD3_00_06, "SAL r/m16/32 CL")
    opSAR_Rm16_32_Cl                 = (0xD3_00_07, "SAR r/m16/32 CL")
    opAMX_Al_Ah_Imm8                 = (0xD4_00_00, "AMX AL AH imm8")
    opAAM_Al_Ah                      = (0xD4_00_A0, "AAM AL AH")
    opADX_Al_Ah_Imm8                 = (0xD5_00_00, "ADX AL AH imm8")
    opAAD_Al_Ah                      = (0xD5_00_A0, "AAD AL AH")
    opSALC_Al                        = (0xD6_00_00, "SALC AL")
    opXLAT_Al_M8                     = (0xD7_00_00, "XLAT AL m8")
    opLOOPNZ_Ecx_Rel8                = (0xE0_00_00, "LOOPNZ eCX rel8")
    opLOOPZ_Ecx_Rel8                 = (0xE1_00_00, "LOOPZ eCX rel8")
    opLOOP_Ecx_Rel8                  = (0xE2_00_00, "LOOP eCX rel8")
    opJCXZ_Rel8_Cx                   = (0xE3_00_00, "JCXZ rel8 CX")
    opIN_Al_Imm8                     = (0xE4_00_00, "IN AL imm8")
    opIN_Eax_Imm8                    = (0xE5_00_00, "IN eAX imm8")
    opOUT_Imm8_Al                    = (0xE6_00_00, "OUT imm8 AL")
    opOUT_Imm8_Eax                   = (0xE7_00_00, "OUT imm8 eAX")
    opCALL_Rel16_32                  = (0xE8_00_00, "CALL rel16/32")
    opJMP_Rel16_32                   = (0xE9_00_00, "JMP rel16/32")
    opJMPF_Ptr16_32                  = (0xEA_00_00, "JMPF ptr16:16/32")
    opJMP_Rel8                       = (0xEB_00_00, "JMP rel8")
    opIN_Al_Dx                       = (0xEC_00_00, "IN AL DX")
    opIN_Eax_Dx                      = (0xED_00_00, "IN eAX DX")
    opOUT_Dx_Al                      = (0xEE_00_00, "OUT DX AL")
    opOUT_Dx_Eax                     = (0xEF_00_00, "OUT DX eAX")
    opLOCK                           = (0xF0_00_00, "LOCK")
    opINT1_Eflags                    = (0xF1_00_00, "INT1 eFlags")
    opREPNZ_Ecx                      = (0xF2_00_00, "REPNZ eCX")
    opREPZ_Ecx                       = (0xF3_00_00, "REPZ eCX")
    opHLT                            = (0xF4_00_00, "HLT")
    opCMC                            = (0xF5_00_00, "CMC")
    opTEST_Rm8_Imm8                  = (0xF6_00_00, "TEST r/m8 imm8")
    opNOT_Rm8                        = (0xF6_00_02, "NOT r/m8")
    opNEG_Rm8                        = (0xF6_00_03, "NEG r/m8")
    opMUL_Ax_Al_Rm8                  = (0xF6_00_04, "MUL AX AL r/m8")
    opIMUL_Ax_Al_Rm8                 = (0xF6_00_05, "IMUL AX AL r/m8")
    opDIV_Al_Ah_Ax_Rm8               = (0xF6_00_06, "DIV AL AH AX r/m8")
    opIDIV_Al_Ah_Ax_Rm8              = (0xF6_00_07, "IDIV AL AH AX r/m8")
    opTEST_Rm16_32_I16_32            = (0xF7_00_00, "TEST r/m16/32 imm16/32")
    opNOT_Rm16_32                    = (0xF7_00_02, "NOT r/m16/32")
    opNEG_Rm16_32                    = (0xF7_00_03, "NEG r/m16/32")
    opMUL_Edx_Eax_Rm16_32            = (0xF7_00_04, "MUL eDX eAX r/m16/32")
    opIMUL_Edx_Eax_Rm16_32           = (0xF7_00_05, "IMUL eDX eAX r/m16/32")
    opDIV_Edx_Eax_Rm16_32            = (0xF7_00_06, "DIV eDX eAX r/m16/32")
    opIDIV_Edx_Eax_Rm16_32           = (0xF7_00_07, "IDIV eDX eAX r/m16/32")
    opCLC                            = (0xF8_00_00, "CLC")
    opSTC                            = (0xF9_00_00, "STC")
    opCLI                            = (0xFA_00_00, "CLI")
    opSTI                            = (0xFB_00_00, "STI")
    opCLD                            = (0xFC_00_00, "CLD")
    opSTD                            = (0xFD_00_00, "STD")
    opINC_Rm8                        = (0xFE_00_00, "INC r/m8")
    opDEC_Rm8                        = (0xFE_00_01, "DEC r/m8")
    opINC_Rm16_32                    = (0xFF_00_00, "INC r/m16/32")
    opDEC_Rm16_32                    = (0xFF_00_01, "DEC r/m16/32")
    opCALL_Rm16_32                   = (0xFF_00_02, "CALL r/m16/32")
    opCALLF_M32_48                   = (0xFF_00_03, "CALLF m16:16/32")
    opJMP_Rm16_32                    = (0xFF_00_04, "JMP r/m16/32")
    opJMPF_M32_48                    = (0xFF_00_05, "JMPF m16:16/32")
    opPUSH_Rm16_32                   = (0xFF_00_06, "PUSH r/m16/32")